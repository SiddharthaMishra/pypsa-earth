apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate  
metadata:
  name: pypsa-workflow-template
spec:
  ttlStrategy:
    secondsAfterCompletion: 10000 
    secondsAfterSuccess: 50000
    secondsAfterFailure: 500000
  templates:
  - name: pypsa-workflow
    steps:
    - - name: prepare-networks
        template: prepare-networks
    
    - - name: solve-networks
        template: solve-networks
        arguments:
          parameters:
            - name: prepared_network_opts
              value: "{{item}}"
        withParam: "{{steps.prepare-networks.outputs.parameters.prepared_network_opts}}"
    
    - - name: update-order-mongo
        template: update-order-mongo

  - name: prepare-networks
    container:
      # image: ubuntu
      # command:
      # - bash
      # - -c
      # - mkdir networks ; echo [\"elec_s_4_ec_lcopt_Co2L-3H\", \"elec_s_6_ec_lcopt_Co2L-3H\", \"elec_s_4_ec_lcopt_Co2L-4H\", \"elec_s_6_ec_lcopt_Co2L-4H\"] >> /tmp/all_networks.txt
      # sleep in a loop
      # args: [ "while true; do sleep 30; done;"]
      image: "{{ workflow.parameters.pypsa_image_path }}"
      # command: ["bash", "-c"]
      command: [ "conda" ]
      args: [ "run", "--no-capture-output", "-n", "pypsa-earth", "./run.sh"]
      resources:
        limits:
          cpu: "5000m"
          memory: "20Gi"
          ephemeral-storage: "200Gi"

      env:
        - name: RUN_FOLDER_PATH
          value: "{{ workflow.parameters.run_folder_name }}"
        # - name: IS_TEST_RUN
        #   value: "false"
        - name: SUBCOMMAND
          value: "prepare"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: creds
              key: GOOGLE_APPLICATION_CREDENTIALS
    outputs:
      parameters:
      - name: prepared_network_opts
        valueFrom:
          path: /tmp/all_networks.txt

 
  - name: solve-networks
    inputs:
      parameters:
      - name: prepared_network_opts
    container:
      image: "{{ workflow.parameters.pypsa_image_path }}"
      # command: ["conda"]
      # args: ["run", "-n", "pypsa-earth", "./run.sh "]
      # image: ubuntu
      # args: [ "while true; do sleep 30; done;"]
      command: ["bash", "-c"]
      args: [ 'mkdir -p networks && conda run --no-capture-output -n pypsa-earth ./run.sh' ]
      resources:
        limits:
          cpu: 4
          memory: 8Gi
          ephemeral-storage: 50Gi
      env:
        - name: PREPARED_NETWORK_OPTS
          value: "{{inputs.parameters.prepared_network_opts}}"
        - name: RUN_FOLDER_PATH
          value: "{{ workflow.parameters.run_folder_name }}"
        # - name: IS_TEST_RUN
        #   value: "false"
        - name: SUBCOMMAND
          value: "run"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: creds
              key: GOOGLE_APPLICATION_CREDENTIALS
  - name: update-order-mongo
    container:
      image: mongo:latest 
      command:
        - "bash"
        - "-c"
        - |
          "mongo \"$MONGO_CONNSTRING\" --eval 'db.jobs.updateOne({_id: ObjectId(\"$TASK_ID\")}, {\$set: {\"status\": \"completed\"}})'"
      env:
        - name: MONGO_CONNSTRING
          valueFrom:
          secretKeyRef:
            name: creds
            key: MONGO_URI
        - name: TASK_ID
          value: "{{workflow.parameters.run_order_id}}" 
